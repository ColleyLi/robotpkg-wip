fix ros package version + fix jrl_map ros_param

diff --git package.xml package.xml
index 6174c77..a7d9331 100644
--- package.xml
+++ package.xml
@@ -1,6 +1,6 @@
 <package>
   <name>dynamic_graph_bridge</name>
-  <version>2.0.0</version>
+  <version>3.0.0</version>
   <description>
 
      ROS bindings for dynamic graph.
diff --git src/robot_model.cpp src/robot_model.cpp
index e4afa19..b183bc3 100644
--- src/robot_model.cpp
+++ src/robot_model.cpp
@@ -77,7 +77,7 @@ void RosRobotModel::loadUrdf (const std::string& filename)
   
   XmlRpc::XmlRpcValue JointsNamesByRank_;
   JointsNamesByRank_.setSize(m_model.names.size());
-  std::vector<std::string>::const_iterator it = m_model.names.begin();
+  std::vector<std::string>::const_iterator it = m_model.names.begin()+1; //the first name is universe
   for (int i=0;it!=m_model.names.end();++it, ++i)  JointsNamesByRank_[i]= (*it);
   nh.setParam(jointsParameterName_, JointsNamesByRank_);
 }
@@ -123,29 +123,7 @@ void RosRobotModel::loadFromParameterServer()
     for (int i=0;it!=m_model.names.end();++it, ++i) JointsNamesByRank_[i]= (*it);
     nh.setParam(jointsParameterName_, JointsNamesByRank_);
 }
-  /*  
-namespace
-{
-
-vectorN convertVector(const ml::Vector& v)
-{
-    vectorN res (v.size());
-    for (unsigned i = 0; i < v.size(); ++i)
-        res[i] = v(i);
-    return res;
-}
-
-ml::Vector convertVector(const vectorN& v)
-{
-    ml::Vector res;
-    res.resize((unsigned int)v.size());
-    for (unsigned i = 0; i < v.size(); ++i)
-        res(i) = v[i];
-    return res;
-}
 
-} // end of anonymous namespace.
-*/
 Vector RosRobotModel::curConf() const
 {
 
diff --git src/sot_loader.cpp src/sot_loader.cpp
index 96cf677..3d0661d 100644
--- src/sot_loader.cpp
+++ src/sot_loader.cpp
@@ -221,7 +221,6 @@ SotLoader::readControl(map<string,dgs::ControlValues> &controlValues)
                 << std::endl;
       exit(-1);
     }
-
   // Publish the data.
   joint_state_.header.stamp = ros::Time::now();  
   for(int i=0;i<nbOfJoints_;i++)
@@ -236,7 +235,6 @@ SotLoader::readControl(map<string,dgs::ControlValues> &controlValues)
 
   joint_pub_.publish(joint_state_);  
 
-  
 }
 
 void SotLoader::setup()
