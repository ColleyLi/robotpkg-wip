Handle the API of urdfdom with version less than 0.3.0

--- CMakeLists.txt~	2016-06-23 14:06:07.084967753 +0200
+++ CMakeLists.txt	2016-06-23 14:05:45.768700958 +0200
@@ -67,6 +67,14 @@
 ADD_REQUIRED_DEPENDENCY("urdfdom >= 0.2.0")
 #ADD_OPTIONAL_DEPENDENCY("lua5.1")
 ADD_OPTIONAL_DEPENDENCY("hpp-fcl >= 0.4.1")
+
+# Special care of urdfdom less than 0.3.0
+IF(URDFDOM_FOUND)
+  IF(${URDFDOM_VERSION} VERSION_LESS "0.3.0")
+    add_definitions(-DURDFDOM_COLLISION_WITH_GROUP_NAME)
+  ENDIF(${URDFDOM_VERSION} VERSION_LESS "0.3.0")
+ENDIF(URDFDOM_FOUND)
+
 IF(HPP_FCL_FOUND AND URDFDOM_FOUND)
   ADD_REQUIRED_DEPENDENCY("assimp >= 2.0")
 if (NOT ${ASSIMP_VERSION} VERSION_LESS "2.0.1150")
--- src/multibody/parser/urdf-with-geometry.hxx~	2016-05-27 14:31:10.000000000 +0200
+++ src/multibody/parser/urdf-with-geometry.hxx	2016-06-23 14:05:29.812501233 +0200
@@ -124,7 +124,13 @@
         {
           fcl::CollisionObject collision_object = retrieveCollisionGeometry((*i)->geometry, package_dirs, mesh_path);
           SE3 geomPlacement = convertFromUrdf((*i)->origin);
+
+#ifdef URDFDOM_COLLISION_WITH_GROUP_NAME
+          std::string collision_object_name = (*i)->group_name ;
+#else
           std::string collision_object_name = (*i)->name ;
+#endif
+
           geom_model.addCollisionObject(model.parents[model.getBodyId(link_name)], collision_object, geomPlacement, collision_object_name, mesh_path); 
           
         }
@@ -143,7 +149,13 @@
         {
           fcl::CollisionObject visual_object = retrieveCollisionGeometry((*i)->geometry, package_dirs, mesh_path);
           SE3 geomPlacement = convertFromUrdf((*i)->origin);
+
+#ifdef URDFDOM_COLLISION_WITH_GROUP_NAME
+          std::string visual_object_name = (*i)->group_name ;
+#else
           std::string visual_object_name = (*i)->name ;
+#endif
+
           geom_model.addVisualObject(model.parents[model.getBodyId(link_name)], visual_object, geomPlacement, visual_object_name, mesh_path); 
           
         }
